
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  name: 'name',
  parent_id: 'parent_id',
  image_url: 'image_url',
  description: 'description'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  name: 'name',
  description: 'description',
  category_id: 'category_id',
  thumbnail_image_url: 'thumbnail_image_url',
  images_url: 'images_url',
  brand_id: 'brand_id',
  meta_title: 'meta_title',
  meta_description: 'meta_description',
  slug: 'slug',
  related_products: 'related_products'
};

exports.Prisma.ProductVariantScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  product_id: 'product_id',
  sku: 'sku',
  price: 'price',
  sale_price: 'sale_price',
  stock: 'stock',
  status: 'status',
  size: 'size',
  image_url: 'image_url',
  barcode: 'barcode'
};

exports.Prisma.ProductAttributeScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  product_id: 'product_id',
  attribute_id: 'attribute_id'
};

exports.Prisma.AttributeScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  name: 'name',
  display_order: 'display_order'
};

exports.Prisma.AttributeValueScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  attribute_id: 'attribute_id',
  value: 'value',
  display_order: 'display_order'
};

exports.Prisma.CustomerScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  first_name: 'first_name',
  last_name: 'last_name',
  name: 'name',
  email: 'email',
  cognito_id: 'cognito_id',
  phone: 'phone',
  is_guest: 'is_guest',
  status: 'status',
  last_login: 'last_login',
  total_spent: 'total_spent',
  order_count: 'order_count',
  notes: 'notes'
};

exports.Prisma.AddressScalarFieldEnum = {
  id: 'id',
  customer_id: 'customer_id',
  recipient_name: 'recipient_name',
  street: 'street',
  city: 'city',
  state: 'state',
  postal_code: 'postal_code',
  country: 'country',
  contact_number: 'contact_number',
  is_default: 'is_default',
  type: 'type'
};

exports.Prisma.OrderScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  customer_id: 'customer_id',
  status: 'status',
  total_amount: 'total_amount',
  shipping_address: 'shipping_address',
  billing_address: 'billing_address',
  payment_status: 'payment_status',
  payment_method: 'payment_method',
  shipping_cost: 'shipping_cost',
  tax_amount: 'tax_amount',
  discount_amount: 'discount_amount',
  tracking_number: 'tracking_number',
  carrier: 'carrier',
  notes: 'notes',
  estimated_delivery: 'estimated_delivery',
  coupon_code: 'coupon_code'
};

exports.Prisma.OrderItemScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  order_id: 'order_id',
  product_id: 'product_id',
  variant_id: 'variant_id',
  quantity: 'quantity',
  price_at_purchase: 'price_at_purchase',
  variant_sku: 'variant_sku',
  variant_attributes: 'variant_attributes',
  refunded_quantity: 'refunded_quantity',
  refund_amount: 'refund_amount'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.ProductVariantStatus = exports.$Enums.ProductVariantStatus = {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE',
  DRAFT: 'DRAFT',
  ARCHIVED: 'ARCHIVED',
  OUT_OF_STOCK: 'OUT_OF_STOCK',
  COMING_SOON: 'COMING_SOON',
  DISCONTINUED: 'DISCONTINUED'
};

exports.CustomerStatus = exports.$Enums.CustomerStatus = {
  Active: 'Active',
  Inactive: 'Inactive',
  Banned: 'Banned',
  Suspended: 'Suspended',
  Deleted: 'Deleted'
};

exports.AddressType = exports.$Enums.AddressType = {
  Shipping: 'Shipping',
  Billing: 'Billing',
  Both: 'Both'
};

exports.OrderStatus = exports.$Enums.OrderStatus = {
  Pending: 'Pending',
  Processing: 'Processing',
  Shipped: 'Shipped',
  Delivered: 'Delivered',
  Cancelled: 'Cancelled',
  Returned: 'Returned',
  Refunded: 'Refunded'
};

exports.PaymentStatus = exports.$Enums.PaymentStatus = {
  Pending: 'Pending',
  Paid: 'Paid',
  Refunded: 'Refunded',
  Partially_Refunded: 'Partially_Refunded',
  Failed: 'Failed'
};

exports.PaymentMethod = exports.$Enums.PaymentMethod = {
  COD: 'COD',
  UPI: 'UPI',
  Net_Banking: 'Net_Banking',
  Credit_Card: 'Credit_Card',
  Debit_Card: 'Debit_Card',
  Wallet: 'Wallet',
  EMI: 'EMI',
  Gift_Card: 'Gift_Card'
};

exports.ShippingCarrier = exports.$Enums.ShippingCarrier = {
  FedEx: 'FedEx',
  UPS: 'UPS',
  USPS: 'USPS',
  DHL: 'DHL',
  BlueDart: 'BlueDart',
  Delhivery: 'Delhivery',
  Custom: 'Custom',
  Porter: 'Porter',
  Other: 'Other'
};

exports.Prisma.ModelName = {
  Category: 'Category',
  Product: 'Product',
  ProductVariant: 'ProductVariant',
  ProductAttribute: 'ProductAttribute',
  Attribute: 'Attribute',
  AttributeValue: 'AttributeValue',
  Customer: 'Customer',
  Address: 'Address',
  Order: 'Order',
  OrderItem: 'OrderItem'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
